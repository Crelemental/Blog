{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my blog and project space!","text":"<p>Here I will upload all the projects that I'm working on, as well as everything related to them! Hopefully I have something that might be interesting to you! Im always open to suggestions and to talk, so add me on discord or email me!  --Crelemental --nikitayakimny@gmail.com</p>"},{"location":"Blog/Windows%20Active%20Directory%20Environment/","title":"Windows Active Directory Environment","text":"<p>Install and run Proxmox Virtual Environment on a Intel NUC Setup a bootable thumb drive with an iso of the latest version of Proxmox. Booting into that drive launches the Proxmox graphical install interface. It goes through which drive you want it installed on, which storage file system you want, and setting up the login credentials. Once thats done, you can control the proxmox from the web interface its accessible from.    After that, these Virtual machines can be transformed into templates to make rapid deployment of extra clone VMs easy to do.</p> <p>Installed Windows Server 2022 (graphical) as a VM in Proxmox     Installed the domain controller in Windows Server 2022          selected AD domain services      (the domain was renamed to dc1.local)          setup AD DS           using SCONFIG, assign static IP and default gateway to the Domain controller, as well as making itself the DNS server. This is so that the domain controller knows its own name, and allows other hosts that want to connect to the domain to discover its domain name.           Setting up the domain controller          Set up a basic user for the Windows 10 VM to join the domain           Now the Windows 10 VM can join the domain with these credentials</p> <p>EDIT If the Windows 10 server isn't able to join the domain and or access the internet, do this.      On the domain controller, go to DNS, choose the DNS server, and right click to properties          Next go to Forwarders and add the Google DNS servers as forwarders          This allows the domain controller to access the internet, and therefore any computer joined to that domain</p> <p>Installed Windows 10 as a VM in Proxmox     set DNS to the Domain controller's DNS       <code>Set-DNSClientServerAddress -InterfaceIndex 20 -ServerAddresses 192.168.50.155</code> EDIT* make sure that the only DNS server on the client computer is the DNS IP of the Domain Controller, otherwise it wont recognize the domain name. The client should get internet connectivity using the forwarders on the domain controller.     connect to Domain            (should be dc1.root for the domain name)          use the credentials I made to join the domain          Now part of the domain</p>"},{"location":"Blog/Wazuh%20SIEM/Exploring%20Configuration%20Assessments/","title":"Exploring Configuration Assessments","text":"<p>On the Wazuh dashboard, im able to see the latest scans of different security benchmarks against my agents  Exploring further into this reveals a score of 37%... I'm going to work to get this score higher and harden my Windows Server 2022 VM.</p> <p> Looking into a failed check reveals a complex description of what the rationale is behind the failure and how to remediate it. </p> <p>Going into the Directory Controller, we can navigate to the GPO editor  </p> <p>After making this change, and restarting the Wazuh agent, the benchmark is re-ran.  We can now see that the GPO policy is configured correctly to pass the benchmark.</p>"},{"location":"Blog/Wazuh%20SIEM/Exploring%20Configuration%20Assessments/#automating-hardening","title":"Automating hardening","text":""},{"location":"Blog/Wazuh%20SIEM/Exploring%20Configuration%20Assessments/#before-doing-this-proceed-with-caution","title":"BEFORE DOING THIS, PROCEED WITH CAUTION","text":"<p>Created by a user \"eneerge\", there is a powershell script that automates hardening for CIS benchmarks. https://github.com/eneerge/CIS-Windows-Server-2022</p> <p>I will run this script and see how much better the VM fares in its security posture.  We now have a score of 92%, which is a ton better than the 37% we had before.  Obviously we will still have some failures due to services that need to be running on this Domain Controller, such as RDP. To further narrow down the failures and get even better hardening, a risk assessment must be done on the network to determine which services are critical to business function and really fine tuning what needs to be left open.</p> <p>EDIT after running this script, I got hard-locked out of the domain controller due to the new local admin account login not being a valid login type.  kinda annoying cause I had to re-do everything from an early clone of the VM :(  It creates a new local admin named: User For some reason even after setting the new password for User and trying to log in, that type of login isn't supported according to the server  Technically I can comment out the renaming of old accounts AND  comment out the disabling of Administrator accounts</p> <p>I would try that, but I already went through a whole reset twice (I know) and had to reset both VMs (server and the 1 joined to the domain)</p>"},{"location":"Blog/Wazuh%20SIEM/Installing%20a%20SIEM%20on%20the%20homelab%21%20%28Wazuh%29/","title":"Installing a SIEM on the homelab! (Wazuh)","text":"<p>Configuring Wazuh, a leading Security Information and Event Management (SIEM) system, in a homelab environment is driven by my imperative to strengthen cybersecurity defenses while gaining hands-on experience with advanced security monitoring and management tools. The core objective is to develop a comprehensive understanding of how to detect, analyze, and respond to security threats in real time, using Wazuh's robust capabilities for log analysis, intrusion detection, and compliance management. This endeavor not only enhances my personal knowledge and skills in cybersecurity but also prepares me to implement and manage enterprise-grade security solutions in a professional setting. </p>"},{"location":"Blog/Wazuh%20SIEM/Installing%20a%20SIEM%20on%20the%20homelab%21%20%28Wazuh%29/#installing-wazuh-all-in-one","title":"Installing Wazuh all-in-one","text":"<p>https://documentation.wazuh.com/current/installation-guide/wazuh-indexer/step-by-step.html We will start by installing curl  </p> <p></p> <p>set a static IP </p> <p>static IP </p> <p><code>sudo nano config.yml</code> --  set config to have this machine's ip as the nodes </p> <p>takes the config.yml and creates it into a installer </p> <p>Installs wazuh, using -a makes it an all-in-one install rather than being a cluster </p> <p>I can now access the dashboard at https://192.168.50.159:443 using the credentials given after installation </p>"},{"location":"Blog/Wazuh%20SIEM/Installing%20a%20SIEM%20on%20the%20homelab%21%20%28Wazuh%29/#adding-agents","title":"Adding agents","text":"<p>Setting up the Wazuh agent on a Windows 10 VM (which is part of a Active Directory Domain). 1st option - GUI  Manager IP: 192.168.50.159 Auth key is generated to encrypt the traffic from the agent to the Wazuh server  Now we have an active agent added to the Wazuh dashboard</p> <p>2nd option - CLI (being set up on the Windows Server 2022 Domain Controller) </p> <p>And now we have the Windows Server showing up as an active agent   (using the CLI would allow for mass deployment of Wazuh agents across a network using GPOs or something similar within a domain)</p> <p>EDIT To start the Wazuh server up after a restart or shutdown, use: <code>systemctl start wazuh-indexer</code> <code>systemctl start wazuh-dashboard</code></p>"}]}